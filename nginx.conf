#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    types_hash_max_size 4096;
    server_names_hash_bucket_size  128;
    #gzip  on;

    # this server simply redirects to the 443 server;
    server {
    
	listen 80;
	# the server name should reflect the host/ip used to access the proxy. In this example, just some ip on the local network
	server_name 192.168.1.100;
	return 301 https://$host$request_uri;
      
    }

    # this server grabs the certs and redirects to whatever service/port you like. Like a docker container.
    server {
    
	listen 443 ssl;
	# the server name should reflect the host/ip used to access the proxy. In this example, just some ip on the local network
	server_name 192.168.1.100;
	ssl_certificate      certs/selfsigned.crt;
	ssl_certificate_key  certs/selfsigned.key;

	ssl_session_cache    shared:SSL:1m;
	ssl_session_timeout  5m;

	ssl_ciphers  HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers  on;
	return 301 http://127.0.0.1:8080$request_uri;

    }

    # This server redirects a hidden service to the desired service/port.
    # server {

	# listen 80;
	# the server name should reflect the host/ip used to access the proxy. In this example, an onion hostname
	# server_name fakeonionvixo3yczjdbmt4ebngssnx5ayr6hrmos27huuqfakeonion.onion;
	# return 301 http://127.0.0.1:8080$request_uri;

    # }

    # This server redirects a domain to the ssl version.
    # server {

	# listen 80;
	# the server name should reflect the host/ip used to access the proxy. In this example, the registered domain name
	# server_name my.domain.com;
	# return 301 http://127.0.0.1:8080$request_uri;

    # }
    
    # This server redirects a domain to a desired service/port.
    # server {

	# listen 443 ssl;
	# the server name should reflect the host/ip used to access the proxy. In this example, the registered domain name
	# server_name my.domain.com;
      
	# ssl_certificate      path/to/signed.crt;
	# ssl_certificate_key  path/to/signed.key;

	# ssl_session_cache    shared:SSL:1m;
	# ssl_session_timeout  5m;

	# ssl_ciphers  HIGH:!aNULL:!MD5;
	# ssl_prefer_server_ciphers  on;
	# return 301 http://127.0.0.1:8080$request_uri;

    # }

}
